/*
 * Copyright (c) 2022 Gabriel Hansson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Number is the order in which the layer nodes appear
#define DEFAULT 0
#define CALC_LAYER 1
#define UTIL_LAYER 2
#define FUNCTION 3

&sk {
    quick-release;
};

&lt {
	flavor = "hold-preferred";
};

/ {

	//IMPROVEMENT: moove theese into a separate compose key folder
	// FIX: lower versions too
	macros {
		// ö = U+00D6
		diaeresis_o: diaeresis_o {
			label = "diaeresis_o";
			compatible = "zmk,behavior-macro";
			// Default is 100ms 
			// https://zmk.dev/docs/behaviors/macros#tap-time
			tap-ms = <0>;
			#binding-cells = <0>;
			bindings =
				<&macro_tap &kp RA(DOUBLE_QUOTES) &kp O>
			;
		};

		// ä = U+00C4
		diaeresis_a: diaeresis_a {
			label = "diaeresis_a";
			compatible = "zmk,behavior-macro";
			tap-ms = <0>;
			#binding-cells = <0>;
			bindings =
				<&macro_tap &kp RA(DOUBLE_QUOTES) &kp A>
			;
		};

		// å = U+00C5
		ring_a: ring_a {
			label = "ring_a";
			compatible = "zmk,behavior-macro";
			tap-ms = <0>;
			#binding-cells = <0>;
			bindings =
				<&macro_tap &kp RA(ASTERISK) &kp A>
			;
		};
	};

	behaviors {
		mod_alt_tap_dance: mod_alt_tap_dance {
			compatible = "zmk,behavior-tap-dance";
			label = "MOD_ALT_TAP_DANCE";
			#binding-cells = <0>;
			tapping-term-ms = <400>;
			bindings = <&kp LEFT_GUI>, <&kp LEFT_ALT>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		// Colemak-DH layout
		default_layer {
			bindings = <
				&kp Q &kp W &kp F &kp P &kp B &kp J &kp L &kp U &kp Y &ring_a
				&kp A &kp R &kp S &kp T &kp G &kp M &kp N &kp E &kp I &kp O
				&kp Z &kp X &kp C &kp D &kp V &kp K &kp H &diaeresis_a &diaeresis_o &none
				&mo FUNCTION &mod_alt_tap_dance &mo UTIL_LAYER &lt CALC_LAYER SPACE &kp RSHIFT &sk LEFT_CONTROL
			>;
		};

		calc_layer {
			bindings = <
				&kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
				&kp KP_LEFT_PARENTHESIS &kp LEFT_BRACKET &kp LEFT_BRACE &kp LESS_THAN &kp PERIOD &kp KP_PLUS &kp MINUS &kp ASTERISK &kp CARET &kp EQUAL
				&kp KP_RIGHT_PARENTHESIS &kp RIGHT_BRACKET &kp RIGHT_BRACE &kp GREATER_THAN &kp COMMA &kp BACKSLASH &kp PIPE &kp SLASH &kp PERCENT &kp DOLLAR
			&trans &trans &trans &trans &trans &trans
		>;
		};

		util_layer {
			bindings = <
				&kp EXCLAMATION &kp AT_SIGN &kp HASH &kp QUESTION &kp AMPERSAND &kp LEFT_ARROW &kp DOWN_ARROW &kp UP_ARROW &kp RIGHT_ARROW &none 
				&kp ESC &kp TAB &kp BSPC &kp RET &kp DOUBLE_QUOTES &kp COLON &kp PERIOD &kp COMMA &kp SEMICOLON &kp SLASH 
				&sk RIGHT_ALT &kp UNDERSCORE &kp GRAVE &kp SINGLE_QUOTE &kp TILDE &kp HOME &kp PAGE_DOWN &kp PAGE_UP &kp END &kp K_CONTEXT_MENU
				&trans &trans &trans &trans &trans &trans
			>;
		};

		function_layer {
			bindings = <
				&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
				&kp F11 &kp F12 &kp DELETE &kp INSERT &kp CAPSLOCK &kp K_PREVIOUS &kp K_VOLUME_DOWN &kp K_VOLUME_UP &kp K_NEXT &kp K_PLAY_PAUSE
				&out OUT_TOG &bt BT_CLR &none &none &kp SCROLLLOCK &kp K_MUTE &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &none &kp PRINTSCREEN 
				&trans &trans &trans &trans &trans &trans
			>;
		};
	};
};

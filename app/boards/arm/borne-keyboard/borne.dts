/*
 * Copyright (c) 2022 Gabriel Hansson
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/led/led.h>

/ {
	model = "borne-keyboard";
	// TODO: huh?
	compatible = "nice,60";

	chosen {
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,console = &cdc_acm_uart;
		zmk,battery = &vbatt;
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk";
		columns = <10>;
		rows = <4>;
		map = <
			RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)			RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
			RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)			RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
			RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)			RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
							RC(3,2) RC(3,3) RC(3,4)			RC(3,5) RC(3,6) RC(3,7)
		>;
	};

	// https://docs.zephyrproject.org/2.5.0/reference/peripherals/kscan.html
	kscan0: kscan {
		compatible = "zmk,kscan-composite";
		label = "KSCAN";
		rows = <4>;
		columns = <10>;

		left {
			kscan = <&kscan_left>;
		};

		right {
			kscan = <&kscan_right>;
			column-offset = <5>;
		};
	};

	kscan_left: kscan_left {
		compatible = "zmk,kscan-gpio-direct";
		label = "KSCAN_LEFT";

		col-gpios
		= <&gpiob 8 (GPIO_ACTIVE_HIGH)>
		, <&gpiob 4 (GPIO_ACTIVE_HIGH)>
		, <&gpiob 3 (GPIO_ACTIVE_HIGH)>
		, <&gpioa 15 (GPIO_ACTIVE_HIGH)>
		, <&gpioa 14 (GPIO_ACTIVE_HIGH)>
		;
		row-gpios
		= <&gpiob 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpiob 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpiob 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		, <&gpioa 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
		;
	};

	kscan_right: kscan_right {
		compatible = "zmk,kscan-gpio-direct";
		label = "KSCAN_RIGHT";

		diode-direction = "row2col";

		col-gpios
		= <&right_io 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&right_io 1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&right_io 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&right_io 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&right_io 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		;
		row-gpios
		= <&right_io 8  (GPIO_ACTIVE_LOW)>
		, <&right_io 9  (GPIO_ACTIVE_LOW)>
		, <&right_io 10 (GPIO_ACTIVE_LOW)>
		, <&right_io 11 (GPIO_ACTIVE_LOW)>
		;
	};
	

	leds {
		compatible = "gpio-leds";
		blue_led: led_0 {
			gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>;
			label = "Blue LED";
		};
	};

	ext-power {
		compatible = "zmk,ext-power-generic";
		label = "EXT_POWER";
		//TODO: huh?
		control-gpios = <&gpio0 5 GPIO_ACTIVE_LOW>;
		init-delay-ms = <50>;
	};


	vbatt: vbatt {
		compatible = "zmk,battery-voltage-divider";
		label = "BATTERY";
		//TODO: adc 1 or 2?
		io-channels = <&adc 1>;
		output-ohms = <10000000>;
		full-ohms = <(10000000 + 4000000)>;
	};
};

&adc {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

//TODO: what protocols can I support?
&i2c0 {
	compatible = "nordic,nrf-twi";
	sda-pin = <17>;
	scl-pin = <20>;
};

&uart0 {
	compatible = "nordic,nrf-uarte";
	tx-pin = <8>;
	rx-pin = <4>;
};

&spi0 {
	// ??
};

&usbd {
	status = "okay";
	cdc_acm_uart: cdc_acm_uart {
		compatible = "zephyr,cdc-acm-uart";
		label = "CDC_ACM_0";
	};
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/* TODO: which adresses to i use?
			nice60: 
			sd: 0x00000000 0x00001000
			code 0x00001000 0x000d3000
			application 0x000d4000 0x000f3fff 
				storage 0x000d4000 0x00020000
				boot 0x000f4000 0x0000c000

			mikoto: 
			softdevice: 0x00000000 0x00026000
			code_partition 0x00026000 0x000c6000
			application 0x000ec000 0x000f3fff 
				storage 0x000ec000 0x00008000
				boot 0x000f4000 0x0000c000
		*/
		sd_partition: partition@0 {
			label = "mbr";
			reg = <0x00000000 0x00001000>;
		};

		code_partition: partition@1000 {
			label = "code_partition";
			reg = <0x00001000 0x000d3000>;
		};

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@d4000 {
			label = "storage";
			reg = <0x000d4000 0x00020000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};
